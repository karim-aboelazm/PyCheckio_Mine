type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    def count_neighbours(grid, row, col):
        return 0


    if __name__ == '__main__':
        #These "asserts" using only for self-checking and not necessary for auto-testing
        assert count_neighbours(((1, 0, 0, 1, 0),
                                 (0, 1, 0, 0, 0),
                                 (0, 0, 1, 0, 1),
                                 (1, 0, 0, 0, 0),
                                 (0, 0, 1, 0, 0),), 1, 2) == 3, "1st example"
        assert count_neighbours(((1, 0, 0, 1, 0),
                                 (0, 1, 0, 0, 0),
                                 (0, 0, 1, 0, 1),
                                 (1, 0, 0, 0, 0),
                                 (0, 0, 1, 0, 0),), 0, 0) == 1, "2nd example"
        assert count_neighbours(((1, 1, 1),
                                 (1, 1, 1),
                                 (1, 1, 1),), 0, 2) == 3, "Dense corner"
        assert count_neighbours(((0, 0, 0),
                                 (0, 1, 0),
                                 (0, 0, 0),), 1, 1) == 0, "Single"
  learner_created: false
status: Unchecked
code: |
  def count_neighbours(grid, row, col):
      return 0


  if __name__ == '__main__':
      #These "asserts" using only for self-checking and not necessary for auto-testing
      assert count_neighbours(((1, 0, 0, 1, 0),
                               (0, 1, 0, 0, 0),
                               (0, 0, 1, 0, 1),
                               (1, 0, 0, 0, 0),
                               (0, 0, 1, 0, 0),), 1, 2) == 3, "1st example"
      assert count_neighbours(((1, 0, 0, 1, 0),
                               (0, 1, 0, 0, 0),
                               (0, 0, 1, 0, 1),
                               (1, 0, 0, 0, 0),
                               (0, 0, 1, 0, 0),), 0, 0) == 1, "2nd example"
      assert count_neighbours(((1, 1, 1),
                               (1, 1, 1),
                               (1, 1, 1),), 0, 2) == 3, "Dense corner"
      assert count_neighbours(((0, 0, 0),
                               (0, 1, 0),
                               (0, 0, 0),), 1, 1) == 0, "Single"
seconds_from_change: 9223372036854775807

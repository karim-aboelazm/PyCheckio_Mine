type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    from typing import Iterable

    def can_balance(weights: Iterable) -> int:
        # your code here
        return -1


    if __name__ == '__main__':
        print("Example:")
        print(can_balance([6, 1, 10, 5, 4]))

        # These "asserts" are used for self-checking and not for an auto-testing
        assert can_balance([6, 1, 10, 5, 4]) == 2
        assert can_balance([10, 3, 3, 2, 1]) == 1
        assert can_balance([7, 3, 4, 2, 9, 7, 4]) == -1
        assert can_balance([42]) == 0
        print("Coding complete? Click 'Check' to earn cool rewards!")
  learner_created: false
status: Unchecked
code: |
  from typing import Iterable

  def can_balance(weights: Iterable) -> int:
      # your code here
      return -1


  if __name__ == '__main__':
      print("Example:")
      print(can_balance([6, 1, 10, 5, 4]))

      # These "asserts" are used for self-checking and not for an auto-testing
      assert can_balance([6, 1, 10, 5, 4]) == 2
      assert can_balance([10, 3, 3, 2, 1]) == 1
      assert can_balance([7, 3, 4, 2, 9, 7, 4]) == -1
      assert can_balance([42]) == 0
      print("Coding complete? Click 'Check' to earn cool rewards!")
seconds_from_change: 9223372036854775807
